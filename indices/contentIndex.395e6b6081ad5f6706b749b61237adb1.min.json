{"/":{"title":"Devoxx 2022 - Notes","content":"![[attachments/Pasted image 20221010094128.png]]\n\nWelcome to my notes from the **[Devoxx 2022](https://devoxx.be/)** conference days.\n\n-\u003e [[notes/About me | About me]]\n\n---\nYou can explore my notes day by day :\n- [[notes/wednesday | Wednesday]]\n- [[notes/thursday | Thursday]]\n- [[notes/friday | Friday]]\n\nOr by navigating the graph below. \n\n---\n\n","lastmodified":"2022-10-13T11:25:13.998560191Z","tags":null},"/notes/About-me":{"title":"About me","content":"\nMy name is Renaud Pirson. I'm a java/angular developer @ [5thFloor](https://5thfloor.be)\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Ahead-Of-Time":{"title":"Ahead Of Time","content":"Ahead of time compilation. by opposition to Just in Time compilation","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/An-introduction-to-Residual-Theory":{"title":"An introduction to Residual Theory","content":"by *Barry O'Reilly*\n\n## The problem\n*Why is architechture so difficult?*\n\nWe don't know the potential futures of our system but we have to take decisions about the system.\n\nDialogque betwen the ordered system of the software and the disordered system of the world.\n=\u003e HyperliminalSystem\n\nRandom events occur un the real world that will stress our model. To counteract this we tend to reduce the scope of the wolrd that interracts with our system, but it's the result of the biaises of the stakholders of the project. Sooner or later, however, something will happen from outside of our bubble and will take us by surprise.\n\nUncertainty and the Complexity Science\n\n## Residuality Theory\n\nresidue = the system after an event that occurs and damages the system.\nThe next steps will be a function of that residue.\n\nWe cannot predict the event, but we can decide the structure of the residue.\n\n### Conscepts from Complexity Science applied to software\n### Random simulation\n\nRequirements are like a random simulation of the environments. \nWe are limited by bias in our somulation. (curse of high dimensionality)\n\n### Kauffman Networks\nNKP analysis\n\na software is a combination of random simulation followed by an NKP analysis.\n\nNKP analysis is limited by our architechural habits ([[notes/Domain Driven Design]], or other patterns)\n\n\nAttractor Networks \u0026 Residues\n\nPlanning for a few of different events can make the system survive a lot more events that we didn't even plan for.\n=\u003e **Stressors analysis**\n\nContagion Analysis : findung invisible coupling (hyperliminal coupling)\n\n\n\n#readMore","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Artificial-Intelligence-You-are-here":{"title":"Artificial Intelligence - You are here","content":"\nKeyNote by Dr Alan D. Thompson\n\n## [[notes/LLM Transformers|Transformer]] model\n\nNew model for [[notes/artificial intelligence| AI]].\nInventend when trying to translate from gendered languages to non gendered languages.\n\n[[GPT-3]]\nLayer of [[notes/LLM Transformers|transformer]] decoders.\nMultiple transformers handling different parts of the context.\n\nWe don't yet understand how these transformers work. They are a black box.\n\n\n\n### Code Gen\n\n- **GoodeGeex** : generate code using prompts \nhuggingface.co.uk/\n- **OpenAI**: http://beta.openai.com\n- SalesForce **CodeGen** =\u003e opensource and free\n\nbooks:\n- Pharmako AI\n- Magoc's a Hoot : written with AI\n#readMore \n\n### Writing\nhttp://onceuponabot.com\n\nWrites a story based on a prompt + images\n\n\n### Images\n- Google Parti\n- Stable diffusion\n- Dall-E 2\n- Google Imagen Video\n- Craiyon","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Clean-code-with-Records-Sealed-Classes-Pattern-matching":{"title":"Clean code with Records - Sealed Classes -Pattern matching","content":"by *José Paumard*\n\nnew features of [[notes/java 19 |Java19]]\n\n## [[notes/Record class|Record]]\n\nA record is a child of the Record class, so it cannot extend anything.\nIt 's immutable.\n\nOverride the **cannonical constructor** for:\n- It's a good idea to create a defensive copy of an arraylist that you pass to make it really immutable. \n- validation\n\n**Compact constructor\n- for validation\n\n\n\u003e [!WARNING] \n\u003e You cannot create a constructor that doesn't call the cannonical constructor\n\n\n## [[notes/Pattern Matching |Pattern Matching]]\n\nAdding responsability to your business model is not always a good idea.\nViolates the single responsability principle.\n\nIf you externalize that responsability, you will have to do some casting to process subclasses.\n\n=\u003e patternMatching for *instanceOf* \n\nFirst step into pattern matching.\n\ncan be used in [[notes/switch expressions|switch expressions]].\n```java\nreturn switch(shape){\n\tcase Circle circle -\u003e ...\n\tcase Square square -\u003e ...\n\tdefault -\u003e ...\n}\n```\nin this example : `Circle circle` is a pattern\n\n\n### Sealed type\n\na type that knows it's extensions.\n```java\npublic sealed interface Shape\npermits Circle, Square{\n\n}\n```\n\nIf the class is sealed, you don't need the default value in the switch :\n\n```java\nreturn switch(shape){\n\tcase Circle circle -\u003e ...\n\tcase Square square -\u003e ...\n}\n```\n\nUsing this, you can make sure you have an implementation for all the sublasses of a type, it's safer.\n\nNext step in pattern matching: **record pattern matching**\n\nNext :\nArray Patten Matching\nNested Patterns\nPatterns from existing classes\n\n#readMore ","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Confessions-of-a-rusty-java-developer":{"title":"Confessions of a rusty java developer","content":"\n## What is RUST\n- C-like syntax\n- strongly typed (with inference)\n- statements\n\t- variable bindings\n\t- expressions\n\n### Most things are expressions\n- functions\n- variable assignments\n- implicit return when no \";\"\n\n**Rust has no**\n- null pointer\n- exceptions\n\n### Rust has algebraic data types.\n Enum have states\nOption type, like optional in java\n- some\n- none\nResult type:\n- ok\n- Err \n\n### Pattern matching and destructuring\nexamples were given\n\n## Differences with java\n- no garbage collector\n- everything is immutable by default\n- everything is private by default\n\n### Ressource allocation\nMemory is allocated in scopes and freed at the end of the scope\n\n### Ownership\nOnly one owner to a memory value.\nSo you can borrow a reference, as long as it's immutable.\n\n### Explicit lifetimes\n\nyou can specify hte lifetimes of hte memory allocations and some relationships between lifetimes.\n=\u003e The compiler educates you and the code becomes simpler and faster.\n\n### Leads to clearer API's\nWhen your dataflow is clearly defind, you can know very precisely how you're supposed to use an api and how the data will be used.\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Domain-Driven-Design":{"title":"Domain Driven Design","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/GraalVM":{"title":"GraalVM","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Internet-of-Things":{"title":"Internet Of Things","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/IoT-in-the-trenches-at-scale":{"title":"IoT in the trenches at scale","content":"[[notes/Internet of Things|Iot]] usually follows a pattern\n\nSensors and actuators communicate with an application\n\nbut then there's a lot of questions that arise when you want to scale: \n- Bad communication\n- monitoring\n- remote management\n- security\n- ...\n\nFallacies of distributed computing:\n- network is reliable\n- latency is 0\n- bandiwth is infinite\n- network is secure\n- topology doesn't change\n- there's 1 administrator\n- transport cost is 0\n- network is homogeneous\n\nThe goal of the AWS components for [[notes/Internet of Things|IoT]] is to make this list seem true-ish.\n\nNetworks is always imperfact, communication will fail, you have to account for that all the time.\n\n### Error handling\n\n```java\ntry{\n\tleapOfFaith();\n}catch(Throwable t){\n\txyz();\n}\n```\nThis is not an anti-pattern in the world of IoT, it's the strength of Java to be able to recover from any kind of unpmanned error.\n\nThe modern JVM is available on a wide variety of wierd systems, so it makes java really good for IoT programming.\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Java-is-agile":{"title":"Java is agile","content":"\nby *Venkat Subramaniam*\n\n# Java *is* Agile\n\n## What is [[notes/agile]] ?\nStand up metings ? \nHumans love ceremonies\n\n**SCRUM MASTERS** !!\n= \u003e LOL\n\nAgile Development = Feedback driven development\n\n## Java\nJava is now an old language. It has survived very long and is still relevant.\n\nThe pace of java evolution has increased last years. Released every 6 months\n\nIt is **NOT** developed in 6 months cycles, some features take multiple years to develop.\n\nIT is **RELEASED** on a § months cycle.\n\n**Features get on the release train when their ready, the trains depart every 6 months**\n\nNot committing to features until we know they will really be usefull.\n =\u003e feedback is key here\n\n\u003e [!IMPORTANT] True Agility\n\u003e Decoupling development cycle from release cycle\n\nLegacy is a funny word, usually it us used for the best things we leave for the next generation. In software dev it usually means technical debt.\n\nJava is still a good legacy for programmers\n10M developpers in java\n\nDemo :  [[notes/java 19]]\n\nDo you work for hte compiler or does the compiler work for the compiler.\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/LLM-Transformers":{"title":"LLM Transformers","content":"\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Microfronted-with-multiple-frameworks":{"title":"Microfronted with multiple frameworks","content":"\nUsing Webpack 5 module Federation\n\nBookref:: Enterprise Angular\n\n[[Microfrontend]]: applying the same reasonning that brought microservices to the frontend. That way, a team can have the responsibility of a domain on the whole stack.\n\nWebPack can bundle multiple modules together, each module can be a separate component.\n\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Microfrontend":{"title":"Microfrontend","content":"Architecture pattern for [[notes/frontend|frontend]] attplications that cover multiple [[notes/microservices|microservices]].\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Pattern-Matching":{"title":"Pattern Matching","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Project-Loom":{"title":"Project Loom","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Qwik":{"title":"Qwik","content":"*A no hydration instant on personnalized web app.*\n\nThe startup time of you application si key to make users stay and come back to the site.\n\n**Javacript** is mostly the issue when it comes to performance.\n\nEven in the top 50 websites, js is still really slowing things down.\n\n## How to fix Javascript ?\n\nWith Qwik, the complexity of hte application doesn't impact the startup time.\n\nIn the past :\n- php\n- ruby on rails\n- jquery\n=\u003e was  performent, but the dev was slow\n\nNow:\n- angular\n- view\n- react\n- ...\n=\u003e fast dev, scales, unified model but super slow\n\nfuture:\n- Google wiz\n- Qwick\n- Marko v6\n\n=\u003e easy to build AND fast \n\n## Advantages of Qwick\nFocuses on **startup time**\n\n### Resumable\nThe app can skip the javascript bootup process (hydration). The state of the app is serialized and sent as html to the browser without any startup time.\n\nThe app can start just like a VM that has been paused and resumed.\n\nWith resumable frameworks, few JS is downloaded, it's loaded when the user interracts with the page.\n\n### Demo\nWhen you click on a button, the JS specific to that button is DL, not even the framework gets downloaded.\n\nEverything gets serialized, even functions.\n\nQuick looks quite like react when developping.\n\n***$*** : marks lazy loading points\n\n**The javascript can also be delayed until the user scrolls and the component gets visible !**\n(default behaviour)\n\n\u003e [!INFO] \n\u003eOnly the complexity of a specific operation will impact the performance of that operation. It doesn't impact the rest of the app or the startup time.\n\nThere is a service worker anticipating what the user could do and downloads the JS on a separate thread in the meantime (still only linked to what's visible).\n\n### Personnalization\nstill in dev.\n\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Record-class":{"title":"Record class","content":"\nsimple pojo class with automatic\n- constructor\n- hashcode\n- equals\n- tostring\n- public members","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Spring-Boot":{"title":"Spring Boot","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Spring-framework-6":{"title":"Spring framework 6","content":"\ntarget  date : 2022-11\n\n[[notes/Spring Boot|Spring Boot]] 3.0 : idem\n\nSteps to spring boot 3\n- Upgrate minor versions (migration guides)\n- Java17\n- Check depreciation in code\n- Blog post on spring.io\n\nSupporting Jakarta EE9+ \n\n### Exception handling\nUsing ExceptionsHandlers for each exception types returning more usefull infor to the clients.\nCan be declared globally in a ControllerAdvice class\n\n### [[notes/Ahead Of Time|AOT]] \u0026 [[notes/GraalVM|GraalVM]]\n\n### Java interface client\n\nCreating a simple rest client using a simple interface with \n```java\n@GetExchange()\n```\n\n### [[notes/Project Loom|Loom]] Support","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/The-art-of-java-language-Pattern-Matching":{"title":"The art of java language Pattern Matching","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/Welcome-to-Devoxx-2022":{"title":"Welcome to Devoxx 2022","content":"## [[notes/artificial intelligence|AI]]\n- [[LLM Transformers]] are the new hot thing in [[notes/artificial intelligence|AI]], replacing Neural Network ?\n- Art : \n\t- Stable Diffusion\n\t- Dall-E 2\n\n## [[notes/java 19|Java 19]]\n- [[notes/Pattern Matching]]\n- \n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/agile":{"title":"Agile","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/artificial-intelligence":{"title":"Artificial Intelligence","content":"\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/friday":{"title":"friday","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/frontend":{"title":"Frontend","content":"","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/java-19":{"title":"java 19","content":"\n## New features\n- [[String blocks]] : multi line strings\n- Smart casting ? [[notes/Pattern Matching]]\n- [[notes/Record class]]\n- [[notes/switch expressions]] \n- [[notes/Project Loom]] ","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/microservices":{"title":"Microservices","content":"Architectural pattern consisting in dividing a complex application / domain in smaller \"standalone\" applications that can be deployed separately.\n\n","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/switch-expressions":{"title":"switch expressions","content":"\nA switch that returns a result. ends with a **;** \nNo mutation involved.","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/thursday":{"title":"Thursday","content":"## Conferences\n- [[notes/Confessions of a rusty java developer]]\n- [[IoT in the trenches at scale]]\n- [[Qwik]] \n- [[notes/The art of java language Pattern Matching]]\n- ","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null},"/notes/wednesday":{"title":"wednesday","content":"\n## Keynotes\n- [[notes/Welcome to Devoxx 2022]]\n- [[notes/Artificial Intelligence - You are here]]\n- [[notes/Java is agile]]\n\n## Conferences\n- [[notes/Spring framework 6]]\n- [[notes/Clean code with Records - Sealed Classes -Pattern matching]]\n- [[notes/Microfronted with multiple frameworks]]\n- [[notes/An introduction to Residual Theory]]","lastmodified":"2022-10-13T11:25:14.014560456Z","tags":null}}